{"ast":null,"code":"var _jsxFileName = \"/Users/aavashupadhyaya/Desktop/project_mern_memories-PART_5/client/src/components/PostDetails/PostDetails.jsx\";\nimport React, { useEffect } from 'react';\nimport { Paper, Typography, CircularProgress, Divider, Grid } from '@material-ui/core/';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { getPost, getPostsBySearch } from '../../actions/posts';\nimport CommentSection from './CommentSection';\nimport useStyles from './styles';\n\nconst Post = () => {\n  const {\n    post,\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id]);\n  useEffect(() => {\n    if (post) {\n      dispatch(getPostsBySearch({\n        search: 'none',\n        tags: post === null || post === void 0 ? void 0 : post.tags.join(',')\n      }));\n    }\n  }, [post]);\n  if (!post) return null;\n\n  const openPost = _id => history.push(`/posts/${_id}`);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      elevation: 6,\n      className: classes.loadingPaper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: \"7em\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const recommendedPosts = posts.filter(({\n    _id\n  }) => _id !== post._id);\n  return /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      padding: '20px',\n      borderRadius: '15px'\n    },\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    className: classes.media,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png',\n    alt: post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, post.title), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    color: \"textSecondary\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, post.tags.map(tag => `#${tag} `)), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body1\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, post.message), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"X-perience by: \", post.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, moment(post.createdAt).fromNow()), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 43\n    }\n  }, \"X-perience\")), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CommentSection, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }))))), !!recommendedPosts.length && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"You might also like:\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.recommendedPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, recommendedPosts.map(({\n    title,\n    name,\n    message,\n    likes,\n    selectedFile,\n    _id\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '20px',\n      cursor: 'pointer'\n    },\n    onClick: () => openPost(_id),\n    key: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, message), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Likes: \", likes.length), /*#__PURE__*/React.createElement(\"img\", {\n    src: selectedFile,\n    width: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/aavashupadhyaya/Desktop/project_mern_memories-PART_5/client/src/components/PostDetails/PostDetails.jsx"],"names":["React","useEffect","Paper","Typography","CircularProgress","Divider","Grid","useDispatch","useSelector","moment","useParams","useHistory","getPost","getPostsBySearch","CommentSection","useStyles","Post","post","posts","isLoading","state","dispatch","history","classes","id","search","tags","join","openPost","_id","push","loadingPaper","recommendedPosts","filter","padding","borderRadius","media","img","selectedFile","title","card","section","map","tag","message","name","createdAt","fromNow","margin","length","likes","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Paper, Typography, CircularProgress, Divider, Grid } from '@material-ui/core/';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { getPost, getPostsBySearch } from '../../actions/posts';\nimport CommentSection from './CommentSection';\nimport useStyles from './styles';\n\nconst Post = () => {\n  const { post, posts, isLoading } = useSelector((state) => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const { id } = useParams();\n\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id]);\n\n  useEffect(() => {\n    if (post) {\n      dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }));\n    }\n  }, [post]);\n\n  if (!post) return null;\n\n  const openPost = (_id) => history.push(`/posts/${_id}`);\n\n  if (isLoading) {\n    return (\n      <Paper elevation={6} className={classes.loadingPaper}>\n        <CircularProgress size=\"7em\" />\n      </Paper>\n    );\n  }\n\n  const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n\n  return (\n    <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n      <Grid container justify=\"space-between\" spacing={4}>\n        <Grid item xs={12} sm={7} className={classes.media}>\n          <img className={classes.img} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <div className={classes.card}>\n            <div className={classes.section}>\n              <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\n              <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n              <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\n              <Typography variant=\"h6\">X-perience by: {post.name}</Typography>\n              <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\n              <Divider style={{ margin: '20px 0' }} />\n              <Typography variant=\"body1\"><strong>X-perience</strong></Typography>\n              <Divider style={{ margin: '20px 0' }} />\n              <CommentSection post={post} />\n              <Divider style={{ margin: '20px 0' }} />\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n      {!!recommendedPosts.length && (\n        <div className={classes.section}>\n          <Typography gutterBottom variant=\"h5\">You might also like:</Typography>\n          <Divider />\n          <div className={classes.recommendedPosts}>\n            {recommendedPosts.map(({ title, name, message, likes, selectedFile, _id }) => (\n              <div style={{ margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\n                <Typography gutterBottom variant=\"h6\">{title}</Typography>\n                <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\n                <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\n                <img src={selectedFile} width=\"200px\" />\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </Paper>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}