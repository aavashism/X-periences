{"ast":null,"code":"var _jsxFileName = \"/Users/aavashupadhyaya/Desktop/project_mern_memories-PART_5/client/src/components/PostDetails/PostDetails.jsx\";\n// import React, { useEffect } from 'react';\n// import { Paper, Typography, CircularProgress, Divider } from '@material-ui/core/';\n// import { useDispatch, useSelector } from 'react-redux';\n// import moment from 'moment';\n// import { useParams, useHistory } from 'react-router-dom';\n// import { getPost, getPostsBySearch } from '../../actions/posts';\n// import CommentSection from './CommentSection';\n// import useStyles from './styles';\n// const Post = () => {\n//   const { post, posts, isLoading } = useSelector((state) => state.posts);\n//   const dispatch = useDispatch();\n//   const history = useHistory();\n//   const classes = useStyles();\n//   const { id } = useParams();\n//   useEffect(() => {\n//     dispatch(getPost(id));\n//   }, [id]);\n//   useEffect(() => {\n//     if (post) {\n//       dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }));\n//     }\n//   }, [post]);\n//   if (!post) return null;\n//   const openPost = (_id) => history.push(`/posts/${_id}`);\n//   if (isLoading) {\n//     return (\n//       <Paper elevation={6} className={classes.loadingPaper}>\n//         <CircularProgress size=\"7em\" />\n//       </Paper>\n//     );\n//   }\n//   const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n//   return (\n//     <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n//       <div className={classes.card}>\n//         <div className={classes.imageSection}>\n//           <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\n//         </div>\n//         <div className={classes.section}>\n//           <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\n//           <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n//           <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\n//           <Typography variant=\"h6\">X-perience by: {post.name}</Typography>\n//           <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\n//           <Divider style={{ margin: '20px 0' }} />\n//           <Typography variant=\"body1\"><strong>X-perience</strong></Typography>\n//           <Divider style={{ margin: '20px 0' }} />\n//           <CommentSection post={post} />\n//           <Divider style={{ margin: '20px 0' }} />\n//         </div>\n//       </div>\n//       {!!recommendedPosts.length && (\n//         <div className={classes.section}>\n//           <Typography gutterBottom variant=\"h5\">You might also like:</Typography>\n//           <Divider />\n//           <div className={classes.recommendedPosts}>\n//             {recommendedPosts.map(({ title, name, message, likes, selectedFile, _id }) => (\n//               <div style={{ margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\n//                 <Typography gutterBottom variant=\"h6\">{title}</Typography>\n//                 <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\n//                 <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\n//                 <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\n//                 <img src={selectedFile} width=\"200px\" />\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       )}\n//     </Paper>\n//   );\n// };\n// export default Post;\nimport React, { useEffect } from 'react';\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core/';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { getPost, getPostsBySearch } from '../../actions/posts';\nimport CommentSection from './CommentSection';\nimport useStyles from './styles';\n\nconst Post = () => {\n  const {\n    post,\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id]);\n  useEffect(() => {\n    if (post) {\n      dispatch(getPostsBySearch({\n        search: 'none',\n        tags: post === null || post === void 0 ? void 0 : post.tags.join(',')\n      }));\n    }\n  }, [post]);\n  if (!post) return null;\n\n  const openPost = _id => history.push(`/posts/${_id}`);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      elevation: 6,\n      className: classes.loadingPaper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: \"7em\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const recommendedPosts = posts.filter(({\n    _id\n  }) => _id !== post._id);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    component: \"h2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, post.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"X-perience by: \", post.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, moment(post.createdAt).fromNow()), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, post.message), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imageSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.media,\n    src: post.selectedFile || 'https://www.indiaspora.org/wp-content/uploads/2018/10/image-not-available.jpg',\n    alt: post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 39\n    }\n  }, \"X-perience\")), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CommentSection, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  })), !!recommendedPosts.length && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.recommended,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"You might also like:\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.recommendedPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, recommendedPosts.map(({\n    title,\n    name,\n    message,\n    likes,\n    selectedFile,\n    _id\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.post,\n    onClick: () => openPost(_id),\n    key: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, title), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, name), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, message), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, \"Likes: \", likes.length), /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.recommendedImg,\n    src: selectedFile,\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  })))))));\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/aavashupadhyaya/Desktop/project_mern_memories-PART_5/client/src/components/PostDetails/PostDetails.jsx"],"names":["React","useEffect","Paper","Typography","CircularProgress","Divider","useDispatch","useSelector","moment","useParams","useHistory","getPost","getPostsBySearch","CommentSection","useStyles","Post","post","posts","isLoading","state","dispatch","history","classes","id","search","tags","join","openPost","_id","push","loadingPaper","recommendedPosts","filter","paper","card","section","title","name","createdAt","fromNow","divider","message","imageSection","media","selectedFile","length","recommended","map","likes","recommendedImg"],"mappings":"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","sourcesContent":["// import React, { useEffect } from 'react';\n// import { Paper, Typography, CircularProgress, Divider } from '@material-ui/core/';\n// import { useDispatch, useSelector } from 'react-redux';\n// import moment from 'moment';\n// import { useParams, useHistory } from 'react-router-dom';\n\n// import { getPost, getPostsBySearch } from '../../actions/posts';\n// import CommentSection from './CommentSection';\n// import useStyles from './styles';\n\n// const Post = () => {\n//   const { post, posts, isLoading } = useSelector((state) => state.posts);\n//   const dispatch = useDispatch();\n//   const history = useHistory();\n//   const classes = useStyles();\n//   const { id } = useParams();\n\n//   useEffect(() => {\n//     dispatch(getPost(id));\n//   }, [id]);\n\n//   useEffect(() => {\n//     if (post) {\n//       dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }));\n//     }\n//   }, [post]);\n\n//   if (!post) return null;\n\n//   const openPost = (_id) => history.push(`/posts/${_id}`);\n\n//   if (isLoading) {\n//     return (\n//       <Paper elevation={6} className={classes.loadingPaper}>\n//         <CircularProgress size=\"7em\" />\n//       </Paper>\n//     );\n//   }\n\n//   const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n\n//   return (\n//     <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n//       <div className={classes.card}>\n//         <div className={classes.imageSection}>\n//           <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\n//         </div>\n//         <div className={classes.section}>\n//           <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\n//           <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n//           <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\n//           <Typography variant=\"h6\">X-perience by: {post.name}</Typography>\n//           <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\n//           <Divider style={{ margin: '20px 0' }} />\n//           <Typography variant=\"body1\"><strong>X-perience</strong></Typography>\n//           <Divider style={{ margin: '20px 0' }} />\n//           <CommentSection post={post} />\n//           <Divider style={{ margin: '20px 0' }} />\n//         </div>\n//       </div>\n//       {!!recommendedPosts.length && (\n//         <div className={classes.section}>\n//           <Typography gutterBottom variant=\"h5\">You might also like:</Typography>\n//           <Divider />\n//           <div className={classes.recommendedPosts}>\n//             {recommendedPosts.map(({ title, name, message, likes, selectedFile, _id }) => (\n//               <div style={{ margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\n//                 <Typography gutterBottom variant=\"h6\">{title}</Typography>\n//                 <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\n//                 <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\n//                 <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\n//                 <img src={selectedFile} width=\"200px\" />\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       )}\n//     </Paper>\n//   );\n// };\n\n// export default Post;\n\nimport React, { useEffect } from 'react';\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core/';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { getPost, getPostsBySearch } from '../../actions/posts';\nimport CommentSection from './CommentSection';\nimport useStyles from './styles';\n\nconst Post = () => {\n  const { post, posts, isLoading } = useSelector((state) => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const { id } = useParams();\n\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id]);\n\n  useEffect(() => {\n    if (post) {\n      dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }));\n    }\n  }, [post]);\n\n  if (!post) return null;\n\n  const openPost = (_id) => history.push(`/posts/${_id}`);\n\n  if (isLoading) {\n    return (\n      <Paper elevation={6} className={classes.loadingPaper}>\n        <CircularProgress size=\"7em\" />\n      </Paper>\n    );\n  }\n\n  const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n\n  return (\n    <Paper className={classes.paper}>\n      <div className={classes.card}>\n        <div className={classes.section}>\n          <Typography variant=\"h3\" component=\"h2\" gutterBottom>{post.title}</Typography>\n          <Typography variant=\"h6\" gutterBottom>X-perience by: {post.name}</Typography>\n          <Typography variant=\"body1\" gutterBottom>{moment(post.createdAt).fromNow()}</Typography>\n          <Divider className={classes.divider} />\n          <Typography variant=\"body1\" gutterBottom>{post.message}</Typography>\n          <div className={classes.imageSection}>\n            <img className={classes.media} src={post.selectedFile || 'https://www.indiaspora.org/wp-content/uploads/2018/10/image-not-available.jpg'} alt={post.title} />\n          </div>\n          <Divider className={classes.divider} />\n          <Typography variant=\"body1\"><strong>X-perience</strong></Typography>\n          <Divider className={classes.divider} />\n          <CommentSection post={post} />\n        </div>\n        {!!recommendedPosts.length && (\n          <div className={classes.recommended}>\n            <Typography gutterBottom variant=\"h5\">You might also like:</Typography>\n            <Divider />\n            <div className={classes.recommendedPosts}>\n              {recommendedPosts.map(({ title, name, message, likes, selectedFile, _id }) => (\n                <div className={classes.post} onClick={() => openPost(_id)} key={_id}>\n                  <Typography gutterBottom variant=\"h6\">{title}</Typography>\n                  <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\n                  <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\n                  <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\n                  <img className={classes.recommendedImg} src={selectedFile} alt={title} />\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </Paper>\n  );\n};\n\nexport default Post;\n\n\n"]},"metadata":{},"sourceType":"module"}