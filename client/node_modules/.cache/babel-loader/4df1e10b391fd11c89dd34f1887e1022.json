{"ast":null,"code":"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch } from 'react-redux';\nimport { commentPost } from '../../actions/posts';\nconst useStyles = makeStyles(theme => ({\n  media: {\n    borderRadius: '20px',\n    objectFit: 'cover',\n    width: '100%',\n    maxHeight: '300px',\n    maxWidth: '300px'\n  },\n  card: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'row-reverse',\n    [theme.breakpoints.down('sm')]: {\n      flexWrap: 'wrap',\n      flexDirection: 'column'\n    }\n  },\n  section: {\n    borderRadius: '20px',\n    margin: '10px',\n    flex: 1\n  },\n  imageSection: {\n    marginRight: '20px',\n    [theme.breakpoints.down('sm')]: {\n      marginRight: 0\n    }\n  },\n  recommendedPosts: {\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column'\n    }\n  },\n  loadingPaper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n    borderRadius: '15px',\n    height: '39vh'\n  },\n  commentsOuterContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n    height: '100%'\n  },\n  commentsInnerContainer: {\n    height: '500px',\n    overflowY: 'auto',\n    marginRight: '30px'\n  }\n}));\n\nconst CommentSection = ({\n  post\n}) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const classes = useStyles();\n  const commentsRef = useRef(); // rest of the component code\n};","map":{"version":3,"sources":["/Users/aavashupadhyaya/Desktop/project_mern_memories-PART_5/client/src/components/PostDetails/styles.js"],"names":["React","makeStyles","Typography","TextField","Button","useDispatch","commentPost","useStyles","theme","media","borderRadius","objectFit","width","maxHeight","maxWidth","card","display","flexDirection","breakpoints","down","flexWrap","section","margin","flex","imageSection","marginRight","recommendedPosts","loadingPaper","justifyContent","alignItems","padding","height","commentsOuterContainer","commentsInnerContainer","overflowY","CommentSection","post","user","JSON","parse","localStorage","getItem","comment","setComment","useState","dispatch","comments","setComments","classes","commentsRef","useRef"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,MAAhC,QAA8C,oBAA9C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAE,MADT;AAELC,IAAAA,SAAS,EAAE,OAFN;AAGLC,IAAAA,KAAK,EAAE,MAHF;AAILC,IAAAA,SAAS,EAAE,OAJN;AAKLC,IAAAA,QAAQ,EAAE;AALL,GADgC;AAQvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJJ,IAAAA,KAAK,EAAE,MAFH;AAGJK,IAAAA,aAAa,EAAE,aAHX;AAIJ,KAACT,KAAK,CAACU,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BC,MAAAA,QAAQ,EAAE,MADoB;AAE9BH,MAAAA,aAAa,EAAE;AAFe;AAJ5B,GARiC;AAiBvCI,EAAAA,OAAO,EAAE;AACPX,IAAAA,YAAY,EAAE,MADP;AAEPY,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,IAAI,EAAE;AAHC,GAjB8B;AAsBvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE,MADD;AAEZ,KAACjB,KAAK,CAACU,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BM,MAAAA,WAAW,EAAE;AADiB;AAFpB,GAtByB;AA4BvCC,EAAAA,gBAAgB,EAAE;AAChBV,IAAAA,OAAO,EAAE,MADO;AAEhB,KAACR,KAAK,CAACU,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BF,MAAAA,aAAa,EAAE;AADe;AAFhB,GA5BqB;AAkCvCU,EAAAA,YAAY,EAAE;AACZX,IAAAA,OAAO,EAAE,MADG;AAEZY,IAAAA,cAAc,EAAE,QAFJ;AAGZC,IAAAA,UAAU,EAAE,QAHA;AAIZC,IAAAA,OAAO,EAAE,MAJG;AAKZpB,IAAAA,YAAY,EAAE,MALF;AAMZqB,IAAAA,MAAM,EAAE;AANI,GAlCyB;AA0CvCC,EAAAA,sBAAsB,EAAE;AACtBhB,IAAAA,OAAO,EAAE,MADa;AAEtBY,IAAAA,cAAc,EAAE,eAFM;AAGtBhB,IAAAA,KAAK,EAAE,MAHe;AAItBmB,IAAAA,MAAM,EAAE;AAJc,GA1Ce;AAgDvCE,EAAAA,sBAAsB,EAAE;AACtBF,IAAAA,MAAM,EAAE,OADc;AAEtBG,IAAAA,SAAS,EAAE,MAFW;AAGtBT,IAAAA,WAAW,EAAE;AAHS;AAhDe,CAAZ,CAAD,CAA5B;;AAuDA,MAAMU,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACnC,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMC,QAAQ,GAAGxC,WAAW,EAA5B;AACA,QAAM,CAACyC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAACR,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEU,QAAP,CAAxC;AACA,QAAME,OAAO,GAAGzC,SAAS,EAAzB;AACA,QAAM0C,WAAW,GAAGC,MAAM,EAA1B,CANmC,CAQnC;AACD,CATD","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch } from 'react-redux';\nimport { commentPost } from '../../actions/posts';\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    borderRadius: '20px',\n    objectFit: 'cover',\n    width: '100%',\n    maxHeight: '300px',\n    maxWidth: '300px'\n  },\n  card: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'row-reverse',\n    [theme.breakpoints.down('sm')]: {\n      flexWrap: 'wrap',\n      flexDirection: 'column',\n    },\n  },\n  section: {\n    borderRadius: '20px',\n    margin: '10px',\n    flex: 1,\n  },\n  imageSection: {\n    marginRight: '20px',\n    [theme.breakpoints.down('sm')]: {\n      marginRight: 0,\n    },\n  },\n  recommendedPosts: {\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column',\n    },\n  },\n  loadingPaper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n    borderRadius: '15px',\n    height: '39vh',\n  },\n  commentsOuterContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n    height: '100%',\n  },\n  commentsInnerContainer: {\n    height: '500px',\n    overflowY: 'auto',\n    marginRight: '30px',\n  },\n}));\n\nconst CommentSection = ({ post }) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState(post?.comments);\n  const classes = useStyles();\n  const commentsRef = useRef();\n\n  // rest of the component code\n}\n"]},"metadata":{},"sourceType":"module"}