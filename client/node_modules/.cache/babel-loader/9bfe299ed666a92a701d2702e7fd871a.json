{"ast":null,"code":"var _jsxFileName = \"/Users/aavashupadhyaya/Desktop/project_mern_memories-PART_5/client/src/components/PostDetails/CommentSection.jsx\";\n// import React, { useState, useRef } from 'react';\n// import { Typography, TextField, Button } from '@material-ui/core/';\n// import { useDispatch } from 'react-redux';\n// import { commentPost } from '../../actions/posts';\n// import useStyles from './styles';\n// const CommentSection = ({ post }) => {\n//   const user = JSON.parse(localStorage.getItem('profile'));\n//   const [comment, setComment] = useState('');\n//   const dispatch = useDispatch();\n//   const [comments, setComments] = useState(post?.comments);\n//   const classes = useStyles();\n//   const commentsRef = useRef();\n//   const handleComment = async () => {\n//     const newComments = await dispatch(commentPost(`${user?.result?.name}: ${comment}`, post._id));\n//     setComment('');\n//     setComments(newComments);\n//     commentsRef.current.scrollIntoView({ behavior: 'smooth' });\n//   };\n//   return (\n//     <div className={classes.commentsContainer}>\n//       <div className={classes.commentsOuterContainer}>\n//         <div className={classes.commentsInnerContainer}>\n//           <Typography gutterBottom variant=\"h6\">Comments</Typography>\n//           {comments?.map((c, i) => (\n//             <Typography key={i} gutterBottom variant=\"subtitle1\">\n//               <strong>{c.split(': ')[0]}</strong>\n//               {c.split(':')[1]}\n//             </Typography>\n//           ))}\n//           <div ref={commentsRef} />\n//         </div>\n//         <div style={{ width: '70%' }}>\n//           <Typography gutterBottom variant=\"h6\">Write a comment</Typography>\n//           <TextField fullWidth rows={4} variant=\"outlined\" label=\"Comment\" multiline value={comment} onChange={(e) => setComment(e.target.value)} />\n//           <br />\n//           <Button style={{ marginTop: '10px' }} fullWidth disabled={!comment.length} color=\"primary\" variant=\"contained\" onClick={handleComment}>\n//             Comment\n//           </Button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default CommentSection;\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch } from 'react-redux';\nimport { commentPost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst CommentSection = ({\n  post\n}) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const classes = useStyles();\n  const commentsRef = useRef();\n  useEffect(() => {\n    var _commentsRef$current;\n\n    (_commentsRef$current = commentsRef.current) === null || _commentsRef$current === void 0 ? void 0 : _commentsRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [comments]);\n\n  const handleComment = async () => {\n    var _user$result;\n\n    const newComments = await dispatch(commentPost(`${user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name}: ${comment}`, post._id));\n    setComment('');\n    setComments(newComments);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsOuterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsInnerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Comments\"), comments === null || comments === void 0 ? void 0 : comments.map((c, i) => /*#__PURE__*/React.createElement(Typography, {\n    key: i,\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, c.split(': ')[0]), c.split(':')[1])), /*#__PURE__*/React.createElement(\"div\", {\n    ref: commentsRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '70%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Write a comment\"), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    rows: 4,\n    variant: \"outlined\",\n    label: \"Comment\",\n    multiline: true,\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: '10px'\n    },\n    fullWidth: true,\n    disabled: !comment.length,\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: handleComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Comment\"))));\n};\n\nexport default CommentSection;","map":{"version":3,"sources":["/Users/aavashupadhyaya/Desktop/project_mern_memories-PART_5/client/src/components/PostDetails/CommentSection.jsx"],"names":["React","useState","useRef","useEffect","Typography","TextField","Button","useDispatch","commentPost","useStyles","CommentSection","post","user","JSON","parse","localStorage","getItem","comment","setComment","dispatch","comments","setComments","classes","commentsRef","current","scrollIntoView","behavior","handleComment","newComments","result","name","_id","commentsContainer","commentsOuterContainer","commentsInnerContainer","map","c","i","split","width","e","target","value","marginTop","length"],"mappings":"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","sourcesContent":["// import React, { useState, useRef } from 'react';\n// import { Typography, TextField, Button } from '@material-ui/core/';\n// import { useDispatch } from 'react-redux';\n\n// import { commentPost } from '../../actions/posts';\n// import useStyles from './styles';\n\n// const CommentSection = ({ post }) => {\n//   const user = JSON.parse(localStorage.getItem('profile'));\n//   const [comment, setComment] = useState('');\n//   const dispatch = useDispatch();\n//   const [comments, setComments] = useState(post?.comments);\n//   const classes = useStyles();\n//   const commentsRef = useRef();\n\n//   const handleComment = async () => {\n//     const newComments = await dispatch(commentPost(`${user?.result?.name}: ${comment}`, post._id));\n\n//     setComment('');\n//     setComments(newComments);\n\n//     commentsRef.current.scrollIntoView({ behavior: 'smooth' });\n//   };\n\n//   return (\n//     <div className={classes.commentsContainer}>\n//       <div className={classes.commentsOuterContainer}>\n//         <div className={classes.commentsInnerContainer}>\n//           <Typography gutterBottom variant=\"h6\">Comments</Typography>\n//           {comments?.map((c, i) => (\n//             <Typography key={i} gutterBottom variant=\"subtitle1\">\n//               <strong>{c.split(': ')[0]}</strong>\n//               {c.split(':')[1]}\n//             </Typography>\n//           ))}\n//           <div ref={commentsRef} />\n//         </div>\n//         <div style={{ width: '70%' }}>\n//           <Typography gutterBottom variant=\"h6\">Write a comment</Typography>\n//           <TextField fullWidth rows={4} variant=\"outlined\" label=\"Comment\" multiline value={comment} onChange={(e) => setComment(e.target.value)} />\n//           <br />\n//           <Button style={{ marginTop: '10px' }} fullWidth disabled={!comment.length} color=\"primary\" variant=\"contained\" onClick={handleComment}>\n//             Comment\n//           </Button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CommentSection;\n\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch } from 'react-redux';\n\nimport { commentPost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst CommentSection = ({ post }) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState(post?.comments);\n  const classes = useStyles();\n  const commentsRef = useRef();\n\n  useEffect(() => {\n    commentsRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [comments]);\n\n  const handleComment = async () => {\n    const newComments = await dispatch(commentPost(`${user?.result?.name}: ${comment}`, post._id));\n\n    setComment('');\n    setComments(newComments);\n  };\n\n  return (\n    <div className={classes.commentsContainer}>\n      <div className={classes.commentsOuterContainer}>\n        <div className={classes.commentsInnerContainer}>\n          <Typography gutterBottom variant=\"h6\">Comments</Typography>\n          {comments?.map((c, i) => (\n            <Typography key={i} gutterBottom variant=\"subtitle1\">\n              <strong>{c.split(': ')[0]}</strong>\n              {c.split(':')[1]}\n            </Typography>\n          ))}\n          <div ref={commentsRef} />\n        </div>\n        <div style={{ width: '70%' }}>\n          <Typography gutterBottom variant=\"h6\">Write a comment</Typography>\n          <TextField fullWidth rows={4} variant=\"outlined\" label=\"Comment\" multiline value={comment} onChange={(e) => setComment(e.target.value)} />\n          <br />\n          <Button style={{ marginTop: '10px' }} fullWidth disabled={!comment.length} color=\"primary\" variant=\"contained\" onClick={handleComment}>\n            Comment\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentSection;\n\n"]},"metadata":{},"sourceType":"module"}